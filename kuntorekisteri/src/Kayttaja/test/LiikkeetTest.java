package Kayttaja.test;
// Generated by ComTest BEGIN
import java.util.*;
import java.io.File;
import Kayttaja.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.04.25 14:11:59 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class LiikkeetTest {



  // Generated by ComTest BEGIN
  /** testAnna64 */
  @Test
  public void testAnna64() {    // Liikkeet: 64
    Liikkeet liikkeet = new Liikkeet(); 
    Liike mave1 = new Liike(2); liikkeet.lisaa(mave1); 
    Liike soutu = new Liike(1); liikkeet.lisaa(soutu); 
    Liike kyykky = new Liike(2); liikkeet.lisaa(kyykky); 
    List <Liike> loytyneet; 
    loytyneet=liikkeet.anna(1); 
    assertEquals("From: Liikkeet line: 72", 1, loytyneet.size()); 
    assertEquals("From: Liikkeet line: 73", true, loytyneet.get(0)== soutu); 
    loytyneet=liikkeet.anna(3); 
    assertEquals("From: Liikkeet line: 75", 0, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta147 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta147() throws SailoException {    // Liikkeet: 147
    Liikkeet liikkeet =new Liikkeet(); 
    Liike mave=new Liike(); 
    mave.vastaaLiike(2); 
    Liike mave2 =new Liike(); 
    mave2.vastaaLiike(1); 
    String tiedNimi = "testi"; 
    File ftied = new File(tiedNimi+".dat"); 
    ftied.delete(); 
    try {
    liikkeet.lueTiedostosta(tiedNimi); 
    fail("Liikkeet: 158 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    liikkeet.lisaa(mave); 
    liikkeet.lisaa(mave2); 
    liikkeet.talleta(); 
    liikkeet.lueTiedostosta(tiedNimi); 
    Iterator<Liike> i = liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 164", mave.toString(), i.next().toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator276 */
  @Test
  public void testIterator276() {    // Liikkeet: 276
    Liikkeet liikkeet= new Liikkeet(); 
    Liike mave= new Liike(2); liikkeet.lisaa(mave); 
    Liike soutu = new Liike(1); liikkeet.lisaa(soutu); 
    Liike kyykky = new Liike(2); liikkeet.lisaa(kyykky); 
    Liike soutu2 = new Liike(1); liikkeet.lisaa(soutu2); 
    Iterator<Liike> i2=liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 286", mave, i2.next()); 
    assertEquals("From: Liikkeet line: 287", soutu, i2.next()); 
    assertEquals("From: Liikkeet line: 288", kyykky, i2.next()); 
    assertEquals("From: Liikkeet line: 289", soutu2, i2.next()); 
    int n = 0; 
    int jnrot[] = { 2,1,2,1} ; 
    for (Liike liike:liikkeet ) {
    assertEquals("From: Liikkeet line: 295", jnrot[n], liike.getTreeniNro()); n++; 
    }
    assertEquals("From: Liikkeet line: 298", 4, n); 
  } // Generated by ComTest END
}